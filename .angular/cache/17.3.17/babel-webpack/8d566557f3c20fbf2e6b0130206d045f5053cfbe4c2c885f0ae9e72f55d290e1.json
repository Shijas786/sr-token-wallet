{"ast":null,"code":"import _asyncToGenerator from \"/Users/shijas/works/sr-token-wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { assert, makeError } from \"./errors.js\";\nexport function createGetUrl(options) {\n  function getUrl(_x, _x2) {\n    return _getUrl.apply(this, arguments);\n  }\n  function _getUrl() {\n    _getUrl = _asyncToGenerator(function* (req, _signal) {\n      assert(_signal == null || !_signal.cancelled, \"request cancelled before sending\", \"CANCELLED\");\n      const protocol = req.url.split(\":\")[0].toLowerCase();\n      assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n        info: {\n          protocol\n        },\n        operation: \"request\"\n      });\n      assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"request\"\n      });\n      let error = null;\n      const controller = new AbortController();\n      const timer = setTimeout(() => {\n        error = makeError(\"request timeout\", \"TIMEOUT\");\n        controller.abort();\n      }, req.timeout);\n      if (_signal) {\n        _signal.addListener(() => {\n          error = makeError(\"request cancelled\", \"CANCELLED\");\n          controller.abort();\n        });\n      }\n      const init = Object.assign({}, options, {\n        method: req.method,\n        headers: new Headers(Array.from(req)),\n        body: req.body || undefined,\n        signal: controller.signal\n      });\n      let resp;\n      try {\n        resp = yield fetch(req.url, init);\n      } catch (_error) {\n        clearTimeout(timer);\n        if (error) {\n          throw error;\n        }\n        throw _error;\n      }\n      clearTimeout(timer);\n      const headers = {};\n      resp.headers.forEach((value, key) => {\n        headers[key.toLowerCase()] = value;\n      });\n      const respBody = yield resp.arrayBuffer();\n      const body = respBody == null ? null : new Uint8Array(respBody);\n      return {\n        statusCode: resp.status,\n        statusMessage: resp.statusText,\n        headers,\n        body\n      };\n    });\n    return _getUrl.apply(this, arguments);\n  }\n  return getUrl;\n}\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl = createGetUrl({});\nexport function getUrl(_x3, _x4) {\n  return _getUrl2.apply(this, arguments);\n}\n//# sourceMappingURL=geturl-browser.js.map\nfunction _getUrl2() {\n  _getUrl2 = _asyncToGenerator(function* (req, _signal) {\n    return defaultGetUrl(req, _signal);\n  });\n  return _getUrl2.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}